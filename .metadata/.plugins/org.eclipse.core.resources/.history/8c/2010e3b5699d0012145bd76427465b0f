function handleFileSelect(evt) {
	var files = evt.target.files; // FileList object

	// files is a FileList of File objects. List some properties.
	for ( var i = 0, f; f = files[i]; i++) {

		var tablePage;
		if (document.getElementById("tweets_page" + (i + 1)) === null) {
			tablePage = document.createElement("table");
			tablePage.id = 'tweets_page' + (i + 1);
		} else {
			tablePage = document.getElementById("tweets_page" + (i + 1));
		}

		var fileDiv;
		if (document.getElementById("div_page" + (i + 1)) === null) {
			fileDiv = document.createElement("div");
			fileDiv.id = 'div_page' + (i + 1);
		} else {
			fileDiv = document.getElementById("div_page" + (i + 1));
		}
		fileDiv.innerText = 'page' + (i + 1);

		var tweets_per_page = "";
		var reader = new FileReader();
		// Closure to capture the file information.
		reader.onload = (function(theFile) {
			return function(e) {
				tweets_per_page = e.target.result;
				var tweets = eval('(' + tweets_per_page + ')');
				for ( var j = 0, result; result = tweets.results[j]; j++) {

					var tweetRow = document.createElement("tr");
					var textColumn = document.createElement("td");
					var lontLatColumn = document.createElement("td");

					textColumn.innerText = result.text;
					if (result.geo !== null) {
						lontLatColumn.innerText = result.geo;
					}
					tweetRow.insertBefore(lontLatColumn, null);
					tweetRow.insertBefore(textColumn, lontLatColumn);
					tablePage.appendChild(tweetRow);
				}
			};
		})(f);

		reader.readAsText(f);
		document.getElementById("tweets").appendChild(fileDiv);
		document.getElementById("tweets").appendChild(tablePage);
	}

	document.getElementById('files').addEventListener('change',
			handleFileSelect, false);
}

function initializeMap() {
	var mapProp = {
		center : new google.maps.LatLng(51.508742, -0.120850),
		zoom : 5,
		mapTypeId : google.maps.MapTypeId.ROADMAP
	};
	var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
	google.maps.event.addDomListener(window, 'load', initializeMap);
}
